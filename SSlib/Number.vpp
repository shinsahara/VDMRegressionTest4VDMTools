/*	1
2	-------------------------------------------------------------------------------		
3	- Copyright (c) 2005, Shin Sahara		
4	- 		
5	- All rights reserved.		
6	- 		
7	- Redistribution and use in source and binary forms,		
8	- with or without modification, are permitted provided that		
9	- the following conditions are met:		
10	- 		
11	- * Redistributions of source code must retain the above copyright notice,		
12	-   this list of conditions and the following disclaimer.		
13	- * Redistributions in binary form must reproduce the above copyright notice,		
14	-   this list of conditions and the following disclaimer in the documentation		
15	-   and/or other materials provided with the distribution.		
16	- * Neither the name of the SCSK CORPORATION nor the names of		
17	-   its contributors may be used to endorse or promote products derived from		
18	-   this software without specific prior written permission.		
19	- 		
20	- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS		
21	- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT		
22	- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR		
23	- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR		
24	- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,		
25	- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,		
26	- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR		
27	- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF		
28	- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING		
29	- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS		
30	- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.		
31	-------------------------------------------------------------------------------		
32	*/

class Number
/*
作成者 = 佐原伸
作成日 = 2004年 1月 9日 
責任
	数共通の振る舞いを表す。

概要
	すべての数に共通な機能を定義する。
*/

values
protected 許容誤差 = 1e-10;
protected 変分 = 1e-5;	
	
functions 
--計算に関する関数群

--計算可能か否かを返す。
--isComputable[int](3) = true
static public isComputable[@e]: @e -> bool
isComputable(n) == is_real(n);

--最小値を返す。
--min[int](lambda x:int, y:int & x > y)(2)(3) = 2
static public min[@e] :( @e * @e -> bool) -> @e -> @e -> @e
min(f)(n1)(n2) == if f(n1,n2) then n1 else n2;
	
--最大値を返す。
--max[int](lambda x:int, y:int & x > y)(2)(3) = 3
static public max[@e] : ( @e * @e -> bool) -> @e -> @e -> @e
max(f)(n1)(n2) == if f(n1,n2) then n2 else n1;

static public ほぼ等しい : real -> real -> bool
ほぼ等しい(r1)(r2) == abs(r1 - r2) < 許容誤差;

static public 与えた許容誤差内である : real -> real -> real -> bool
与えた許容誤差内である(a許容誤差)(r1)(r2) == abs(r1 - r2) < a許容誤差;

static public GCD : nat1 * nat +> nat1
GCD(i,j) == 
	cases j :
	(0)		-> i,
	others	-> GCD(j, i mod j)
	end
/*
post 
  公約数である(i, j, RESULT) and
  not exists s : nat1 
    & 公約数である(i, j, s) and s > RESULT
 */
 ;
 
static public 公約数である : nat* nat * nat1 +> bool
公約数である(i, j, s) == i mod s = 0 and j mod s = 0;

end Number

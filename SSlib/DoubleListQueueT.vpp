/*	1
2	-------------------------------------------------------------------------------		
3	- Copyright (c) 2005, Shin Sahara		
4	- 		
5	- All rights reserved.		
6	- 		
7	- Redistribution and use in source and binary forms,		
8	- with or without modification, are permitted provided that		
9	- the following conditions are met:		
10	- 		
11	- * Redistributions of source code must retain the above copyright notice,		
12	-   this list of conditions and the following disclaimer.		
13	- * Redistributions in binary form must reproduce the above copyright notice,		
14	-   this list of conditions and the following disclaimer in the documentation		
15	-   and/or other materials provided with the distribution.		
16	- * Neither the name of the SCSK CORPORATION nor the names of		
17	-   its contributors may be used to endorse or promote products derived from		
18	-   this software without specific prior written permission.		
19	- 		
20	- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS		
21	- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT		
22	- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR		
23	- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR		
24	- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,		
25	- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,		
26	- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR		
27	- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF		
28	- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING		
29	- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS		
30	- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.		
31	-------------------------------------------------------------------------------		
32	*/
/*
テストグループ
	Queueのテスト
関連 UC
	なし
作成者
佐原伸
*/
class DoubleListQueueT is subclass of TestDriver
functions
public tests : () -> seq of TestCase
tests () == 
	[ new DoubleListQueueT01()
	];
end DoubleListQueueT

/*
シナリオID
	待ち行列の検査。
親UseCase
	なし
内容
	待ち行列の検査。
*/
class DoubleListQueueT01 is subclass of TestCase
operations 
public test: () ==> bool
test() == 
	let	q0 = DoubleListQueue`empty[int](),
		q1 = DoubleListQueue`enQueue[int](1, q0),
		q2 = DoubleListQueue`enQueue[int](2, q1),
		q3 = DoubleListQueue`enQueue[int](3, q2),
		h1 = DoubleListQueue`top[int](q3),
		q4 = DoubleListQueue`deQueue[int](q3),
		q5 = DoubleListQueue`enQueue[int](4, q4),
		q6 = DoubleListQueue`enQueue[int](5, q5),
		q7 = DoubleListQueue`deQueue[int](q6),
		q8 = DoubleListQueue`deQueue[int](q7),
		q9 = DoubleListQueue`deQueue[int](q8),
		q10 = DoubleListQueue`deQueue[int](q9),
		h2 = DoubleListQueue`top[int](q10),
		q11 = DoubleListQueue`deQueue[int](q10),
		q12 = DoubleListQueue`fromList[char]("Sahara Shin", DoubleListQueue`empty[char]())
	in
	return
		DoubleListQueue`isEmpty[int](q0) and q0 = mk_([], []) and
		DoubleListQueue`toList[int](q1) = [1] and q1 = mk_([], [1]) and
		DoubleListQueue`toList[int](q2) = [1,2] and q2 = mk_([], [2,1]) and
		DoubleListQueue`toList[int](q3) = [1,2,3] and q3 = mk_([], [3,2,1]) and
		h1 = 1 and
		DoubleListQueue`toList[int](q4) = [2,3] and q4 = mk_([2,3], []) and
		DoubleListQueue`toList[int](q5) = [2,3,4] and q5 = mk_([2,3], [4]) and
		DoubleListQueue`toList[int](q6) = [2,3,4,5] and q6 = mk_([2,3], [5, 4]) and
		DoubleListQueue`toList[int](q7) = [3,4,5] and q7 = mk_([3], [5, 4]) and
		DoubleListQueue`toList[int](q8) = [4,5] and q8 = mk_([], [5, 4]) and
		DoubleListQueue`toList[int](q9) = [5] and q9 = mk_([5], []) and
		DoubleListQueue`toList[int](q10) = [] and DoubleListQueue`isEmpty[int](q10) and q10 = mk_([], []) and
		h2 = nil and
		q11 = nil and
		DoubleListQueue`toList[char](q12) = "Sahara Shin" and q12 = mk_([], "nihS arahaS")
		
;
protected 準備する: () ==> ()
準備する() == テスト名 := "DoubleListQueueT01:\t待ち行列の検査";
protected 後始末する: () ==> ()
後始末する() == return;
end DoubleListQueueT01
/*	1
2	-------------------------------------------------------------------------------		
3	- Copyright (c) 2005, Shin Sahara		
4	- 		
5	- All rights reserved.		
6	- 		
7	- Redistribution and use in source and binary forms,		
8	- with or without modification, are permitted provided that		
9	- the following conditions are met:		
10	- 		
11	- * Redistributions of source code must retain the above copyright notice,		
12	-   this list of conditions and the following disclaimer.		
13	- * Redistributions in binary form must reproduce the above copyright notice,		
14	-   this list of conditions and the following disclaimer in the documentation		
15	-   and/or other materials provided with the distribution.		
16	- * Neither the name of the SCSK CORPORATION nor the names of		
17	-   its contributors may be used to endorse or promote products derived from		
18	-   this software without specific prior written permission.		
19	- 		
20	- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS		
21	- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT		
22	- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR		
23	- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR		
24	- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,		
25	- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,		
26	- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR		
27	- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF		
28	- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING		
29	- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS		
30	- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.		
31	-------------------------------------------------------------------------------		
32	*/

/* $Id: Queue.vpp,v 1.1 2005/10/31 02:15:42 vdmtools Exp $ */
-- 待ち行列(Queue)
class Queue

functions
static public empty[@型] : () -> seq of @型
empty() == [];

static public isEmpty[@型] : seq of @型 -> bool
isEmpty(s) == s = [];
	
static public enQueue[@型] : @型 * seq of @型 -> seq of @型
enQueue(ある要素, ある待ち行列) == ある待ち行列 ^ [ある要素];

static public deQueue[@型] : seq of @型 -> seq of @型
deQueue(ある待ち行列) == 
	if ある待ち行列 = [] then
		[]
	else
		tl ある待ち行列;

static public top[@型] : seq of @型 -> [@型]
top(ある待ち行列) == 
	if ある待ち行列 = [] then
		nil
	else
		hd ある待ち行列;
		
static public topAndDeQueue[@型] : seq of @型 -> [@型] * seq of @型
topAndDeQueue(ある待ち行列) == 
	mk_(top[@型](ある待ち行列), deQueue[@型](ある待ち行列)) ;

end Queue